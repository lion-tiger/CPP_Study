1 how to study cplane code 
through sct log 

how to compile
216 

1 compile process
protocol buffer

蓝色   c++ protocol buffer
绿色   build cpp.o

A C++ protocol buffer
B python protocol buffer

C linking static library 


=========================================
cplane 
cplane central
cplane ue


main_cpCentral.cpp
main

cplane::commonMain

1 main_cpCentral.cpp
    int main()
2 cplane::commonMain();

boost::program_options::variables_map        操作系统相关

0 基础 看cplane代码
c++  


3 runCpCentral            CplaneCentralRunner.cpp

4 run

applications::CpCentralWithDependencies

5 zmqReceiver.reveiveLoop();

    std::vector<std::function<void()>> callbacks;     key
    ZmqReceiver::registerReceiver
    
    
6  folder corenetwork
ConcreteFsHLAPInterface



FsHLAPGateway.hpp
FsHLAPInterface.hpp
sendMsg()  --> gateway.send(msg)


sendMsg()
    ConcreteFsHLAPInteface.cpp
    ConcreteL2HiCOnfig.cpp
    ConCreteL2HiUser.cpp
    ConcreteOAMInterface.cpp
    ConcreteRRCInterface.cpp

    cplaneCentral.fsHlApInterfaces.emplace(poolId, std::make_unique<core_network::ConcreteFsHLAPInterface>(*fsHlApGateway));
    
    
    
    std::make_unique 智能指针
    
    
void CplaneCentral::OAMMessagesHandler::createFsHLAPInterface(types::NodeAddress nodeId, types::PoolId poolId)
{
    std::uint32_t nodeIdSic = nodeId.value << 16;
    types::Sicad fsHLAPAddress{nodeIdSic + common::CPID_5G_L3_FSHLC_CPRT};
    LOG_INFO_MSG(cplaneCentral.logger, "Creating FsHLAP interface to {} for Pool: {:#x}", fsHLAPAddress.value, poolId.value);
    if(!cplaneCentral.fsHlApSyscomEndpoint)
    {
        endpoints::SocketAddress syscomProxyAddress = {cplaneCentral.sysComConfiguration.sysComGwIp, cplaneCentral.sysComConfiguration.sysComGwPortCprt.value};
        auto localSicad = cplaneCentral.sysComConfiguration.FsHlAp;
        cplaneCentral.fsHlApSyscomEndpoint = std::make_shared<endpoints::SyscomEndpoint<message_gateway::listeners::FsHLAPListener>>(
            cplaneCentral.logger, cplaneCentral.fshlapDeserializer, std::move(syscomProxyAddress), localSicad);
    }
    auto fsHlApGateway = core_network::createFsHLAPGateway(cplaneCentral.fsHlApSyscomEndpoint, fsHLAPAddress);
    cplaneCentral.fsHlApInterfaces.emplace(poolId, std::make_unique<core_network::ConcreteFsHLAPInterface>(*fsHlApGateway));
    cplaneCentral.fsHlApGateways.emplace(poolId, std::move(fsHlApGateway));
}

[16:12:24.248749][17240][17240][debug] ConcreteFsHLAPInterface sending messages::FsHLAP::CellSetupRequest



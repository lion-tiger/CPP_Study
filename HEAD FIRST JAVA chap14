chap14 序列化与文件的输入输出
可以存储完整的对象

对象可以被序列化 也可以被展开

对象有行为和状态两种属性 行为存在于类中 状态存在于个别对象中

java应用程序所存储的文件 需要给非java的应用程序所读取时

笔记 or 存储按钮（ save） 命名文件

储存状态的选择有多种

将数据写到某处，可以是磁盘上的文件，也可以是网络上的串流    使用数据库呢？？

游戏中 需要一种方法保存人物的状态 存储和恢复尽可能的容易

序列化的文件难以阅读，但是比纯文本文件更容易让程序恢复这3种任务的状态。

将序列化对象写入文件


将对象序列化（存储）

数据在串流中移动  串流必须要链接到某处才算是个串流。

良好的面向对象程序设计   每个类只做好一件事，  字节写入文件   对象转换成可以写入串流的数据

java虚拟机所需要的信息


对象的状态是什么 ？ 有什么需要保存？
在乎的是堆上是否有 与存储时一模一样的对象状态？？
当对象被序列化时，被该对象引用的实例变量也会被序列化，且所有被引用的对象也会被序列化。
这些操作都是自动进行的


被对象的实例变量所引用的所有对象都会被序列化

objectOutputStream.writeObject(myBox);
  任何放在此处的对象必须实现序列化 否则执行期一定会出问题
  
  
序列化是全有或者全无的

如果某实例变量不能或者不应该被序列化，transient
如果你需要序列化程序跳过某个实例变量


网络联机的东西不需要序列化，执行期当场创建才有意义，一旦程序关闭后，联机本身不在有用。下次执行需要重新创建出来。

解序列化
不同的java虚拟机执行期 甚至不是同一个java虚拟机 把对象恢复到存储时的状态。









CPP_PART4
面向对象编程
模板与泛型编程

C++如何支持面向对象编程和泛型编程
chap15 继承和动态绑定  继承和动态绑定 与数据抽象是面向对象编程的基础
chap16 函数模板和类模板 模板 编写独立于具体类型的泛型类和泛型函数

对C++充分理解
标准库
类型和算法

chap15
面向对象编程
封装  数据抽象
继承
多态  动态绑定

动态绑定使编译器能够在运行时决定使用积累中定义的函数还是派生类中定义的函数
相关但略有不同的概念
面向对象编程  OOP  与这种应用匹配

15.1 面向对象编程 概述
多态性 
C++中 多态性仅用于通过继承而相关联的类型的引用或指针
继承 共享公共的东西 特化本质上不同的东西
函数特化
继承层次
在C++中 基类必须指出希望派生类重定义哪些函数 virtual
定义为virtual   基类希望派生类继承的函数不能定义为虚函数

动态绑定
    使用多态，编写程序使用继承层次中的任一类型的对象，无须关心对象的具体类型
    
    C++中 通过基类的引用 指针 调用虚函数时 发生动态绑定，
    
    
15.2
定义基类和派生类
在继承层次中定义类还需要另外一些特性
基类也有定义其接口和实现的数据和函数成员
继承层次的根类一般需要定义虚析构函数













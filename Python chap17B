
20170922
jythonc命令把python类编译成java类  这样的java类能直接导入到java程序中




http://www.jython.org/downloads.html
jython下载地址  Jython2.7.0

开发环境安装
1 jython  2.7.0
2 java    1.8.0.44



/Users/tengyue/jython2.7.0

Jython 和 java 类交互方面  普通的特性访问直接访问javabean属性

所有属性可以通过构造函数中的关键字参数进行设置
b = awt.Button()
b.setEnable(false)
b.enable=false

b = awt.Button(enable=false) 
多参数元组 函数参数 事件监听器

java class path 

最近苹果电脑安装环境
1 java
2 go
3 jython


export JYTHON_HOME=/Users/tengyue/jython2.7.0
export JYTHONPATH=$JYTHON_HOME/lib
export PATH=$JAVA_HOME/bin:$$JAVA_HOME:$JYTHONPATH:$PATH


export JYTHON_HOME=/Users/Siro/jython2.7b1
export JYTHONPATH=$JYTHON_HOME/Lib

# Path
export PATH=$JAVA_HOME/bin:$JYTHON_HOME:$PATH





17.3 编写c语言扩展

扩展Python通常指扩展CPython 用c语言实现标准python版本
提示！！

c语言的动态性不及java 和 c#    .net

编写python的c语言时必须严格遵照API  有几个项目的目的是简化编写c语言的扩展过程

SWIG  简单包装和接口生成器
其他的动态语言 javascript
导入已经存在的 共享的c语言库       库

tcl python perl ruby java

c文件 为代码写接口文件 在接口文件上运行swig 自动生成部分c语言代码，包装代码
c语言代码 + 包装代码 = 共享库
回文蛋白质序列   c语言代码

编译和使用 这一小段c代码

接口文件  到处函数和变量


http://www.swig.org/download.html

1 head first java
2 runoob java
3 runoob c++

4 python
5 git
6 shell



命令行选项
bzip2 -d XXX.tar.bz2
tar xvf XXX.tar

./configure
make
make install
http://atmarkplant.com/install-swig-for-mac-os-x/

The SWIG test-suite and examples are configured for the following languages:
go java perl5 php5 python ruby tcl 



2
LD_LIBRARY_PATH=/usr/local/lib:/usr/lib
export LD_LIBRARY_PATH


/usr/include/python2.7


https://www.zhihu.com/question/30941329


export PYTHON_HOME=/System/Library/Frameworks/Python.framework/Versions/Current

引用计数
python内存自动管理
c语言必须显示的释放不在使用的对象或者说内存块  内存泄露  不在需要他的时候会自动消失

借用的引用 VS 自己的引用

引用计数是垃圾收集的一种 垃圾是程序不在使用的对象  循环垃圾

编写python c扩展


static PyObject *somename(PyObject *self,PyObject *args){
    PyObject *result;
    
    Py_INCREF(result);
    return result;
}

函数的签名：
int PyArg_ParseTuple(PyObject *args,char *format,...);
格式字符串

if(!PyArg_ParseTuple(args,"")){
    return NULL:
}

格式字符串  Python/C API

在扩展的模块中可以创建自己的內建类型和类

Python文档

c语言代码充当模块



#include <Python.h>
static Object *is_palindrmoe(PyObject *self, PyObject *args){
    int i,n;
    const char *text;
    int result;
    
    if(!PyArg_ParseTuple(args,"s",&text)){
        return NULL;
    }

    n=strlen(text);
    result =1;
    for(i =0;i<=n/2;++i){
        if( text[i] != text[n-i-1])
            result =0;
            break;
        }
    }
    
    return Py_BUildValue("i",result);
}

static PyMethodDef PaqlindromeMethods[] = {
    {"is_palindrom", is_palindrome, METH_VARARGS,"Detect palindromes"},
    {NULL,NULL,0,NULL}
};

PyMODINT_FUNC initpalindrome(){
    Py_InitModule("palindrome“，PalindromeMethods);
}



原型化
SWIG是一个自动为c语言库生成包装代码的工具
编写可以作为共享库直接导入Python的C语言代码






































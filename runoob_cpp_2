

11 C++存储类   --ok
变量或函数的范围 和 声明周期

auto 
register
static 
extern
mutable
thread_local C++11

auto C++98标准中 auto关键字用于自动变量的声明 使用极少 切多余 C++11中删除
根据初始化表达式自动腿短被声明变量的类型
必须初始化为同一类型



register存储类  register存储类 用于定义存储在寄存器中而不是ram中的局部变量
不能对 register存储类  &  因为没有内存位置
{
    register int miles;
}

register 只用于需要快速访问的变量 计数器 变量可能存在于寄存器中 取决于硬件和实现的限制

static存储类
三种变量
A 局部变量
static指示编译器 在程序的声明周期内保持 局部变量存在，而不是每次进入和离开作用域时进行创建和销毁。
使用static修饰局部变量 可以在函数调用之间保持局部变量的值
B 全局变量
使全局变量的作用域限制在声明他的文件内
C 类的成员变量
类数据成员上时，该成员的副本 被类的所有对象共享。

extern存储类
extern存储类 用于提供一个全局变量的引用
全局变量对所有的程序文件都是可见的  变量名指向 一个之前定义过的一个存储位置


有多个文件 定义了一个可以在其他文件中使用的全局变量或者函数，在其他文件中 用extern得到已定义的变量或者函数的引用
extern用来再另一个文件中声明一个全局变量或者函数
extern通常用于  两个或者多个文件共享相同的全局变量或者函数的时候



mutable存储类
仅适用于类的对象，   允许对象的成员替代常量  mutable成员可以通过const成员函数修改
thread_local  仅可在 它在其上创建的  线程上访问。标量在创建线程是创建，销毁线程是销毁。
每个线程都有其自己的变量副本
数据声明和定义  不能函数声明和定义






12 C++运算符  --ok
一种告诉编译器 执行特定的数学或者逻辑操作的符号 内置了丰富的运算符
算术   + - * / % ++ --
关系   == != > < >= <=
逻辑   && || !
位     & | ^ ~ >> <<     位运算符作用于位
赋值   = += -= *= /= %= <<= >>= &= ^= |=
杂项   sizeof   condition ? X:Y  ,  . -> cast  & *



运算符重载 operator+
          operator=

编译并运行程序




大型软件项目 跨文件 变量 函数声明  库的编译 ？？？？
